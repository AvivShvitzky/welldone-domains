{"version":3,"sources":["components/list/List.jsx","consts.js","store/atoms.js","store/mockData.js","pages/categories/Categories.jsx","components/input/Input.jsx","components/toast/Toast.consts.js","components/toast/Toast.jsx","components/form/Form.jsx","store/utils.js","pages/newCategory/NewCategory.jsx","store/mutations.js","pages/viewCategory/ViewCategory.jsx","pages/editCategory/EditCategory.jsx","components/title/Title.jsx","components/navbar/Navbar.consts.js","components/navbar/Navbar.jsx","Router.js","App.js","index.js"],"names":["List","data","onClickHandler","listItems","map","item","onClick","href","className","name","toString","ICON_NEW","ICON_VIEW","ICON_EDIT","ICON_DELETE","ICON_HOME","CATEGORIES","NEW_CATEGORY","EDIT_CATEGORY","currentPage","atom","key","default","categories","currPickedCategory","Categories","props","useRecoilState","currentPageAtom","setCurrentPage","categoriesAtom","currPickedListItemAtom","setCurrPickedListItem","useEffect","event","preventDefault","target","currentTarget","clickHandler","listItem","Input","value","label","onChangeHandler","htmlFor","onChange","e","type","id","aria-describedby","TOAST_SUCCESS","TOAST_WARNING","CREATE_TOAST","DELETE_TOAST","toast","configure","Toast","toastContext","toastType","toastText","success","warning","dismiss","Form","categoryName","useState","setValue","useToast","toastTuple","findCategoryIndex","findIndex","category","categoryExists","deepCopyArray","array","JSON","parse","stringify","NewCategory","addCategory","setCategories","useCallback","newCategoryName","updatedCategories","useAddCategory","ViewCategory","setCategory","categoryParam","match","params","style","width","display","EditCategory","editCategory","originalCategoryName","updatedCategoryName","categoryIndex","copiedCategories","useEditCategory","Title","children","ICONS_AVAILABILITY","NOT_MOUNTED","CATEGORIES_CHECKED","VIEW_CATEGORY","TITLE_OPTIONS","Navbar","currPickedCategoryAtom","deleteCategory","splice","useDeleteCategory","title","iconAvailable","iconType","includes","to","icon","faHome","size","pathname","faPlus","state","faBookOpen","faEdit","faTrashAlt","Router","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63ed877c.chunk.js","sourcesContent":["// libraries and css\r\nimport React from 'react';\r\nimport './List.css';\r\n\r\nfunction List({ data, onClickHandler }) {\r\n\r\n  const listItems = data.map(item =>\r\n  <a \r\n    onClick={() => onClickHandler(item)} href=\"#\" className=\"list-group-item list-group-item-action\"\r\n    key={item.name.toString()}\r\n  >\r\n    {item.name}\r\n  </a>\r\n  );\r\n\r\n  return (\r\n    <div className=\"list\">\r\n      <div className=\"list-group\">\r\n        {listItems}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","// icon types\r\nexport const ICON_NEW = 'ICON_NEW'\r\nexport const ICON_VIEW = 'ICON_VIEW'\r\nexport const ICON_EDIT = 'ICON_EDIT'\r\nexport const ICON_DELETE = 'ICON_DELETE'\r\nexport const ICON_HOME = 'ICON_HOME'\r\n\r\n// pages and contexes\r\nexport const NOT_MOUNTED = 'NOT_MOUNTED'\r\nexport const CATEGORIES = 'CATEGORIES'\r\nexport const CATEGORIES_CHECKED = 'CATEGORIES_CHECKED'\r\nexport const NEW_CATEGORY = 'NEW_CATEGORY'\r\nexport const EDIT_CATEGORY = 'EDIT_CATEGORY'\r\nexport const VIEW_CATEGORY = 'VIEW_CATEGORY'\r\nexport const DELETE_CATEGORY = 'DELETE_CATEGORY'\r\n","import { atom } from \"recoil\";\r\n\r\nimport { NOT_MOUNTED } from '../consts'\r\nimport { categories as categoriesData } from './mockData'\r\n\r\nexport const currentPage = atom({\r\n  key: 'currentPage',\r\n  default: NOT_MOUNTED\r\n});\r\n\r\nexport const categories = atom({\r\n  key: 'categories',\r\n  default: categoriesData\r\n});\r\n\r\nexport const currPickedCategory = atom({\r\n  key: 'currPickedCategory',\r\n  default: {}\r\n});\r\n\r\n// export const view = atom({\r\n//   key: \"view\",\r\n//   default: \"monthly\",\r\n// });","export const categories = [\r\n  { name: 'houses' },\r\n  { name: 'hotels' },\r\n  { name: 'playgrounds' },\r\n  { name: 'pools' },\r\n  { name: 'forests' },\r\n  { name: 'parks' },\r\n]","// libraries and css\r\nimport React, { useEffect } from 'react';\r\nimport './Categories.css';\r\n\r\n// components\r\nimport List from '../../components/list/List'\r\n\r\n// consts\r\nimport { CATEGORIES, CATEGORIES_CHECKED } from '../../consts'\r\n\r\n// store\r\nimport { useRecoilState } from \"recoil\"; \r\nimport { \r\n  categories as categoriesAtom,\r\n  currentPage as currentPageAtom,\r\n  currPickedCategory as currPickedListItemAtom\r\n} \r\nfrom '../../store/atoms'\r\n\r\nfunction Categories(props) {\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageAtom);\r\n  const [categories, setCategories] = useRecoilState(categoriesAtom);\r\n  const [currPickedListItem, setCurrPickedListItem] = useRecoilState(currPickedListItemAtom);\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(CATEGORIES)\r\n  }, [])\r\n\r\n  // allows the parent div to fire a click event seperate from his childs\r\n  const clickHandler = event => {\r\n    event.preventDefault();\r\n    if (event.target === event.currentTarget) {\r\n      setCurrentPage(CATEGORIES)\r\n    }\r\n  }\r\n\r\n  const listItemClickHandler = (listItem) => {\r\n    setCurrentPage(CATEGORIES_CHECKED)\r\n    setCurrPickedListItem(listItem)\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"page\"\r\n      onClick={event => clickHandler(event)}\r\n    >\r\n      <div className=\"page__content\">\r\n        <List\r\n          data={categories}\r\n          onClickHandler={listItemClickHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","// libraries and css\r\nimport React from 'react';\r\nimport './Input.css';\r\n\r\nconst Input = ({ value, label, onChangeHandler }) => {\r\n  return (\r\n    <fieldset className=\"heading--primary\">\r\n      <label htmlFor=\"categoryName\">{label}</label>\r\n      <input \r\n        value={value} \r\n        onChange={e => onChangeHandler(e.target.value)} \r\n        type=\"text\" \r\n        className=\"form-control input\" \r\n        id=\"categoryName\" \r\n        aria-describedby=\"categoryHelp\" \r\n      />\r\n    \r\n    </fieldset>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n\r\n\r\n\r\n// const Input = ({ value, label, onChangeHandler }) => {\r\n//   return (\r\n//     <fieldset className=\"heading--primary\">\r\n//       <label htmlFor=\"categoryName\">{label}</label>\r\n//       <input \r\n//         value={value} \r\n//         onChange={(e) => setValue(e.target.value)} \r\n//         type=\"text\" \r\n//         className=\"form-control input\" \r\n//         id=\"categoryName\" \r\n//         aria-describedby=\"categoryHelp\" \r\n//       />\r\n    \r\n//     </fieldset>","export const TOAST_SUCCESS = 'TOAST_SUCCESS'\r\nexport const TOAST_WARNING = 'TOAST_WARNING'\r\nexport const NEW_CATEGORY_SUCCESS = 'Category was added successfully.'\r\nexport const NEW_CATEGORY_FAIL = 'Category already exsits.'\r\nexport const EDIT_CATEGORY_SUCCESS = 'Category was edited successfully.'\r\nexport const EDIT_CATEGORY_FAIL = 'There was a problem editing the Category.'\r\nexport const DELETE_CATEGORY_SUCCESS = 'Category was deleted successfully.'\r\nexport const CREATE_TOAST = 'CREATE_TOAST'\r\nexport const DELETE_TOAST = 'DELETE_TOAST'\r\n\r\n\r\n","// libraries and css\r\nimport React from 'react';\r\nimport { toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\n// consts\r\nimport { TOAST_SUCCESS, TOAST_WARNING, CREATE_TOAST, DELETE_TOAST } from './Toast.consts'\r\n\r\ntoast.configure()\r\n\r\nfunction Toast() {\r\n  const notify = ( toastContext, toastType, toastText) => {\r\n    if (toastContext === CREATE_TOAST) {\r\n      if (toastType === TOAST_SUCCESS) {\r\n        toast.success(toastText)\r\n      }\r\n      else if (toastType === TOAST_WARNING) {\r\n        toast.warning(toastText)\r\n      }\r\n    } else if (toastContext === DELETE_TOAST) {\r\n      toast.dismiss()\r\n    }\r\n  }\r\n  return notify\r\n};\r\n\r\nexport default Toast;\r\n\r\n","// libraries and css\r\nimport React, { useState, useEffect } from 'react';\r\n\r\n// components\r\nimport Input from '../input/Input'\r\n\r\n// consts\r\nimport { \r\n  TOAST_SUCCESS, \r\n  TOAST_WARNING,\r\n  NEW_CATEGORY_SUCCESS,\r\n  NEW_CATEGORY_FAIL,\r\n  EDIT_CATEGORY_SUCCESS,\r\n  EDIT_CATEGORY_FAIL,\r\n  CREATE_TOAST,\r\n  DELETE_TOAST\r\n} from '../toast/Toast.consts'\r\nimport { NEW_CATEGORY, EDIT_CATEGORY } from '../../consts'\r\n\r\nimport useToast from '../toast/Toast'\r\n\r\nfunction Form({ clickHandler, currentPage, categoryName}) {\r\n  const [value, setValue] = useState('')\r\n  const toast = useToast()\r\n\r\n  const setValueHandler = value => {\r\n    setValue(value)\r\n  }\r\n\r\n  // initial\r\n  useEffect(() => {\r\n    if (categoryName) {\r\n      setValue(categoryName)\r\n    }\r\n  },[categoryName])\r\n\r\n  // clean up\r\n  useEffect(() => {\r\n    return () => {\r\n      toast(DELETE_TOAST)\r\n    };\r\n  }, []);\r\n\r\n  const onSubmitHandler = e => {\r\n    e.preventDefault();\r\n    const success = clickHandler(value);\r\n    const toastTuple = () => {\r\n      if (currentPage === NEW_CATEGORY) {\r\n        return [NEW_CATEGORY_SUCCESS, NEW_CATEGORY_FAIL]\r\n      } else if (EDIT_CATEGORY) {\r\n        return [EDIT_CATEGORY_SUCCESS, EDIT_CATEGORY_FAIL]\r\n      }\r\n    }\r\n    // trigger a toast\r\n    if (success) {\r\n      toast(CREATE_TOAST, TOAST_SUCCESS, toastTuple()[0])\r\n    } else {\r\n      toast(CREATE_TOAST, TOAST_WARNING, toastTuple()[1])\r\n    }\r\n    // clean data\r\n    setValue('')\r\n  }\r\n \r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <Input \r\n          value={value}\r\n          label=\"Category Name\"\r\n          onChangeHandler={setValueHandler}\r\n        />\r\n        <small id=\"categoryHelp\" className=\"form-text text-muted\">Enter a name for a category.</small>\r\n      </div>\r\n      <button onClick={onSubmitHandler} type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","\r\n/**\r\n* searches for a category with a given name.\r\n* @param {String} categoryName\r\n* @returns the index of the found category. If none, it returns -1.\r\n*/\r\nexport function findCategoryIndex(categories, categoryName) {\r\n  const categoryIndex = categories.findIndex(category => category.name === categoryName);\r\n  return categoryIndex;\r\n}\r\n\r\n/**\r\n* checks if a category exists on the categories list.\r\n* @param {Array} categories\r\n* @param {String} categoryName\r\n* @returns if the category exists on the categories list.\r\n*/\r\nexport function categoryExists(categories, categoryName) {\r\n  return findCategoryIndex(categories, categoryName) !== -1\r\n}\r\n\r\n/**\r\n* returns a deep copy of an array.\r\n* @param {Array} array\r\n* @returns a deep copy of an array.\r\n*/\r\nexport function deepCopyArray(array) {\r\n  const copiedArray = JSON.parse(JSON.stringify(array))\r\n  return copiedArray;\r\n}","// libraries and css\r\nimport React, { useEffect } from 'react';\r\n\r\n// components\r\nimport Form from '../../components/form/Form'\r\n\r\n// consts\r\nimport { NEW_CATEGORY } from '../../consts'\r\n\r\n// store\r\nimport { useRecoilState } from \"recoil\";\r\nimport { currentPage as currentPageAtom } from '../../store/atoms'\r\nimport { useAddCategory } from '../../store/mutations'\r\n\r\n\r\nfunction NewCategory() {\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageAtom);\r\n  const addCategory = useAddCategory()\r\n\r\n  useEffect(() => {\r\n    setCurrentPage(NEW_CATEGORY)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <div className=\"page__content\">\r\n        <Form \r\n          clickHandler={addCategory}\r\n          currentPage={currentPage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCategory;\r\n","import React, { useState, useCallback } from 'react';\r\n\r\nimport { useRecoilState } from \"recoil\";\r\n\r\nimport { \r\n  categories as categoriesAtom, \r\n  currPickedCategory as currPickedCategoryAtom \r\n} \r\nfrom './atoms'\r\nimport { \r\n  findCategoryIndex, \r\n  deepCopyArray, \r\n  categoryExists \r\n} from './utils'\r\n\r\nexport function useAddCategory() {\r\n  const [categories, setCategories] = useRecoilState(categoriesAtom);\r\n  \r\n  const memoizedCallback = useCallback(\r\n    newCategoryName => {\r\n      if (!categoryExists(categories, newCategoryName)) {\r\n        const updatedCategories = [\r\n          ...categories,\r\n          {\r\n            name: newCategoryName\r\n          },\r\n        ]\r\n        setCategories(updatedCategories)\r\n        return true\r\n      } \r\n      return false\r\n    },\r\n    [categories, categoryExists],\r\n    );\r\n    \r\n  return memoizedCallback;\r\n}\r\n\r\nexport function useEditCategory() {\r\n  const [categories, setCategories] = useRecoilState(categoriesAtom);\r\n  \r\n  const memoizedCallback = useCallback(\r\n    (originalCategoryName, updatedCategoryName) => {\r\n      const categoryIndex = findCategoryIndex(categories, originalCategoryName)\r\n      const copiedCategories = deepCopyArray(categories)\r\n      if (categoryIndex === -1) {\r\n        return false\r\n      } \r\n      else {\r\n        copiedCategories[categoryIndex].name = updatedCategoryName\r\n        setCategories(copiedCategories)\r\n        return true\r\n      }\r\n    },\r\n    [categories],\r\n    );\r\n    \r\n  return memoizedCallback;\r\n}\r\n\r\nexport function useDeleteCategory() {\r\n  const [categories, setCategories] = useRecoilState(categoriesAtom);\r\n  \r\n  const memoizedCallback = useCallback(\r\n    currPickedCategory => {\r\n      const categoryIndex = findCategoryIndex(categories, currPickedCategory.name)\r\n      if (categoryIndex !== -1) {\r\n        const copiedCategories = deepCopyArray(categories)\r\n        copiedCategories.splice(categoryIndex, 1) // removes the category from the categories array\r\n        const updatedCategories = copiedCategories\r\n        setCategories(updatedCategories)\r\n        return true\r\n      } \r\n      return false\r\n    },\r\n    [categories],\r\n    );\r\n    \r\n  return memoizedCallback;\r\n}\r\n\r\n","// libraries and css\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// components\r\nimport Form from '../../components/form/Form'\r\n\r\n// consts\r\nimport { VIEW_CATEGORY } from '../../consts'\r\n\r\n// store\r\nimport { useRecoilState } from \"recoil\";\r\nimport { currentPage as currentPageAtom } from '../../store/atoms'\r\n\r\nfunction ViewCategory(props) {\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageAtom);\r\n  const [category, setCategory] = useState({ name: '' })\r\n\r\n  useEffect(() => {\r\n    const categoryParam = props.match.params\r\n    setCategory(categoryParam)\r\n    setCurrentPage(VIEW_CATEGORY)\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <div className=\"page__content\">\r\n        <div className=\"card\" style={{width: '18rem', display: 'inline-block'}}>\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">{category.name}</h5>\r\n            <p className=\"card-text\">This is a mock text for a category.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewCategory;\r\n","// libraries and css\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n// components\r\nimport Form from '../../components/form/Form'\r\n\r\n// consts\r\nimport { EDIT_CATEGORY } from '../../consts'\r\n\r\n// store\r\nimport { useRecoilState } from \"recoil\";\r\nimport { currentPage as currentPageAtom } from '../../store/atoms'\r\nimport { useEditCategory } from '../../store/mutations'\r\n\r\n\r\nfunction EditCategory(props) {\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageAtom);\r\n  const [category, setCategory] = useState({ name: '' })\r\n  const editCategory = useEditCategory()\r\n\r\n  useEffect(() => {\r\n    const categoryParam = props.match.params\r\n    setCategory(categoryParam)\r\n    setCurrentPage(EDIT_CATEGORY)\r\n  }, [])\r\n\r\n  const editClickHandler = newCategoryName => {\r\n    return editCategory(category.name, newCategoryName)\r\n  }\r\n\r\n  return (\r\n    <div className=\"categories\">\r\n      <div className=\"page__content\">\r\n        <Form \r\n          clickHandler={editClickHandler}\r\n          categoryName={category.name}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCategory;\r\n","// libraries and css\r\nimport React from 'react';\r\nimport './Title.css';\r\n\r\nconst Title = ({ children }) => {\r\n  return (\r\n    <h1 className=\"title\">{children}</h1>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import {\r\n  ICON_NEW, ICON_VIEW, ICON_EDIT, ICON_DELETE, ICON_HOME\r\n} from '../../consts'\r\n\r\n// determans if an icon would be available on a certain page\r\nexport const ICONS_AVAILABILITY = {\r\n  NOT_MOUNTED: [],\r\n  CATEGORIES: [ICON_NEW], \r\n  CATEGORIES_CHECKED: [ICON_NEW, ICON_VIEW, ICON_EDIT, ICON_DELETE], \r\n  NEW_CATEGORY: [ICON_HOME], \r\n  EDIT_CATEGORY: [ICON_NEW, ICON_DELETE, ICON_HOME],\r\n  VIEW_CATEGORY: [ICON_NEW, ICON_EDIT, ICON_DELETE, ICON_HOME]\r\n}\r\n\r\nexport const TITLE_OPTIONS = {\r\n  NOT_MOUNTED: '',\r\n  CATEGORIES: 'Categories', \r\n  CATEGORIES_CHECKED: 'Categories', \r\n  NEW_CATEGORY: 'New Category', \r\n  EDIT_CATEGORY: 'Edit Category',\r\n  VIEW_CATEGORY: 'View Category'\r\n}","// libraries and css\r\nimport React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, faPlus, faEdit, faBookOpen, faTrashAlt, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport './Navbar.css';\r\n\r\n// components\r\nimport Title from '../title/Title'\r\n\r\n// consts\r\nimport {\r\n  ICON_NEW, ICON_VIEW, ICON_EDIT, ICON_DELETE, ICON_HOME,\r\n  CATEGORIES, CATEGORIES_CHECKED, NEW_CATEGORY, EDIT_CATEGORY, VIEW_CATEGORY\r\n} from '../../consts'\r\nimport { ICONS_AVAILABILITY, TITLE_OPTIONS } from './Navbar.consts'\r\n\r\n// store\r\nimport { useRecoilState } from \"recoil\";\r\nimport { \r\n  currentPage as currentPageAtom,\r\n  currPickedCategory as currPickedCategoryAtom\r\n} from \"../../store/atoms\";\r\nimport { useDeleteCategory } from '../../store/mutations'\r\n\r\nfunction Navbar() {\r\n  const [currentPage, setCurrentPage] = useRecoilState(currentPageAtom);\r\n  const [currPickedCategory, setCurrPickedCategoryAtom] = useRecoilState(currPickedCategoryAtom);\r\n  const deleteCategory = useDeleteCategory()\r\n  const category = currPickedCategory\r\n\r\n  const title = TITLE_OPTIONS[currentPage]\r\n  const iconAvailable = iconType => {\r\n    return ICONS_AVAILABILITY[currentPage].includes(iconType)\r\n  }\r\n\r\n  return (\r\n    <nav className=\"navbar bg-white\">\r\n      <span className=\"title\">\r\n        \r\n        <Title>{title}</Title>\r\n      </span>\r\n\r\n      <div className=\"navbar__icons\">\r\n        <Link \r\n          to='/categories' \r\n          className={`icon__box ${iconAvailable(ICON_HOME) ? 'icon__box--available' : 'icon__box--unavailable'}`}\r\n        >\r\n          <FontAwesomeIcon \r\n            icon={faHome} \r\n            size=\"lg\"/>\r\n          <span>Home</span>\r\n        </Link>\r\n        <span className=\"vl\"></span>\r\n        <Link \r\n          to={{pathname: iconAvailable(ICON_NEW) ? '/new-category' : ''}} \r\n          className={`icon__box ${iconAvailable(ICON_NEW) ? 'icon__box--available' : 'icon__box--unavailable'}`}\r\n          onClick={() => setCurrentPage(NEW_CATEGORY)}\r\n        >\r\n          <FontAwesomeIcon \r\n            icon={faPlus} \r\n            size=\"lg\"/>\r\n          <span>New</span>\r\n        </Link>\r\n        <Link \r\n          to={{\r\n            pathname: iconAvailable(ICON_VIEW) ? `/category/${category.name}` : '',\r\n            state: { category }\r\n          }} \r\n          className={`icon__box ${iconAvailable(ICON_VIEW) ? 'icon__box--available' : 'icon__box--unavailable'}`}\r\n        >\r\n          <FontAwesomeIcon \r\n            icon={faBookOpen} \r\n            size=\"lg\"/>\r\n          <span>View</span>\r\n        </Link>\r\n        <Link \r\n          to={{\r\n            pathname: iconAvailable(ICON_EDIT) ? `/edit-category/${category.name}` : '',\r\n            state: { category }\r\n          }} \r\n          className={`icon__box ${iconAvailable(ICON_EDIT) ? 'icon__box--available' : 'icon__box--unavailable'}`}\r\n        >\r\n          <FontAwesomeIcon \r\n            icon={faEdit} \r\n            size=\"lg\"/>\r\n          <span>Edit</span>\r\n        </Link>\r\n        <div \r\n          className={`icon__box ${iconAvailable(ICON_DELETE) ? 'icon__box--available' : 'icon__box--unavailable'}`}\r\n          onClick={() => deleteCategory(category)}  \r\n        >\r\n          <FontAwesomeIcon \r\n            icon={faTrashAlt} \r\n            size=\"lg\"/>\r\n          <span>Delete</span>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nimport {\r\n  Route,\r\n  Switch,\r\n  BrowserRouter,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport Categories from './pages/categories/Categories'\r\nimport NewCategory from './pages/newCategory/NewCategory'\r\nimport ViewCategory from './pages/viewCategory/ViewCategory'\r\nimport EditCategory from './pages/editCategory/EditCategory'\r\nimport Navbar from './components/navbar/Navbar'\r\n\r\n\r\nconst Router = () => {\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/categories\" />\r\n        </Route>\r\n        <Route exact default path=\"/categories\"\r\n          component={Categories}\r\n        />\r\n        <Route exact default path=\"/new-category\"\r\n          component={NewCategory}\r\n        />\r\n        <Route path=\"/category/:name\"\r\n          component={ViewCategory}\r\n        />\r\n        <Route path=\"/edit-category/:name\"\r\n          component={EditCategory}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default Router\r\n\r\n","import './App.css';\n\nimport Router from './Router'\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n\n\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { RecoilRoot } from \"recoil\";\nimport './index.css';\n\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}